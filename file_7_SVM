'''
svm预测回归业务
预测十字路口的车流量
'''

import numpy as np
import pandas as pd
import sklearn.preprocessing as sp
import sklearn.model_selection as ms
import sklearn.svm as svm
import sklearn.metrics as sm

class DigitEncoder():
    '''数字编码器，数字与字符串互相转换'''
    def fit_transform(self, y):
        return y.astype(int)

    def transform(self, y):
        return y.astype()

    def inverse_transform(self, y):
        return y.astype(str)

#整理数据
data = []
with open('路径', 'r') as f:
    for line in f.readlines():
        data.append(line[:-1].split(','))
data = np.array(data)
print(data.shape)

x, y, encoders = [], [], []
for col in range(data.shape[1]):#按列切

    # print(data[:, col].shape)
    col_values = data[:, col]
    if col_values[0].isdigit():
        encoder = DigitEncoder()
    else:
        encoder = sp.LabelEncoder()
    col_encoded = encoder.fit_transform(col_values)
    if col < data.shape[1]-1:#列数减一
        x.append(col_encoded)
    else:
        y = col_encoded
    encoders.append(encoder)#保存训练好的encoder
x = np.array(x).T
y = np.array(y)
print(x.shape, y.shape)
train_x, test_x, train_y, test_y = ms.train_test_split(x, y, test_size=0.3, random_state=7)
#选择模型，训练模型
model = svm.SVR(kernel='rbf', C=10, epsilon=0.2)#回归也有升维变换

model.fit(train_x, train_y)

#预测
predict_test_y = model.predict(test_x)
print(sm.r2_score(test_y, predict_test_y))
#针对真实的业务场景进行预测
data = [['Tuesday', '00:05', 'San Francisco', 'no']]#预测车流量
data = np.array(data)
x, y = [], []
for col in range(data.shape[1]):

    # print(data[:, col].shape)
    col_values = data[:, col]
    encoder = encoders[col]
    col_encoded = encoder.transform(col_values)
    x.append(col_encoded)
x = np.array(x).T
y = np.array(y)
print(x)
pre_y = model.predict(x)
print(pre_y)
