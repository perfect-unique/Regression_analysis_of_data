import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import sklearn.linear_model as lm
import pickle
import sklearn.metrics as sm

#读取数据，输入集（二维），输出集（一维），训练模型，预测结果，画图
data = pd.read_excel('D:\worksp\model2.xlsx')

train_x = data['data1']
train_y = data['data2']
train_x = train_x.values.reshape(-1, 1)

plt.figure('Linear Regression', facecolor='lightgray')
plt.title('Linear Regression', fontsize=18)
plt.grid(linestyle=':')
plt.scatter(train_x, train_y, s=70, color='blue', label='Sample Points')

# #模型加载,调用
# with open('linear.pkl', 'rb') as f:
#     model = pickle.load(f)

model = lm.LinearRegression()
model.fit(train_x, train_y)
predict_y = model.predict(train_x)
plt.plot(train_x, predict_y, color='red', label='Regression Line')
print(sm.r2_score(train_y, predict_y))
#岭回归
model = lm.Ridge(100, fit_intercept=True, max_iter=100)
model.fit(train_x, train_y)
predict_y = model.predict(train_x)
plt.plot(train_x, predict_y, color='green', label='Ridge')
print(sm.r2_score(train_y, predict_y))
#
# #模型评估
# import sklearn.metrics as sm
# print(sm.mean_absolute_error(train_y, predict_y))
# print(sm.mean_squared_error(train_y, predict_y))
# print(sm.median_absolute_error(train_y, predict_y))
# print(sm.r2_score(train_y, predict_y))

plt.legend()
plt.show()

